<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id=";v)W{UP{Vtvv[I8o0^C{">filledCup</variable></variables><block type="pxt-on-start" id="YfRzT+-Q_:ZntIuAH-pD" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="wARSI81Y%4-YGakU!jSH" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Cup {" line1="" line2="    volume: number" line3="    temperature: number" line4="    coffeeGrounds: number" line5="    sodaMix: number" line6="    isCarbonated: boolean" line7="    descriptionString: string" line8="    constructor() {" line9="        this.volume = 0" line10="        this.temperature = 0" line11="        this.coffeeGrounds = 0" line12="        this.sodaMix = 0" line13="        this.isCarbonated = false" line14="        this.descriptionString = &quot;empty cup&quot;" line15="    }" line16="" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id="SmUJr,6(}]z.eM.ONh]e" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class DrinkMachine {" line1="" line2="    reservoirVolume: number" line3="    private reservoirTemperature: number" line4="    amountOfGroundsStored: number" line5="    amountOfSodaMixStored: number" line6="    mixingContainerVolume: number" line7="    mixingContainerTemperature: number" line8="    groundsInMixingContainer: number" line9="    sodaMixInMixingContainer: number" line10="    completedDrink: Cup" line11="" line12="    private loopCount: number; //the current number of loops for the DrinkMachine" line13="    mixingHeaterOn: boolean; //whether or not the LED for the timer is on or not" line14="    mixingCoolerOn: boolean; //mixing cooler is turned on" line15="    mixingContainerCarbonated: boolean" line16="    fillingMixingContainer: boolean //valve is open" line17="" line18="    private RESERVOIR_FLOW_RATE_PER_LOOP = .785" line19="    private MIXING_CONTAINER_MAX_VOLUME = 500" line20="    private GROUNDS_PER_SCOOP = 0.175 //updated 18 August" line21="    private SODA_MIX_PER_SCOOP = 0.195 //updated 18 August" line22="    private HEATER_POWER = 200" line23="    private COOLER_POWER = -170.97756" line24="" line25="" line26="" line27="    constructor() {" line28="        this.reservoirVolume = 5000" line29="        this.reservoirTemperature = 24.0" line30="        this.amountOfGroundsStored = 100.0" line31="        this.amountOfSodaMixStored = 100.0" line32="        this.mixingContainerVolume = 0.5" line33="        this.mixingContainerTemperature = 24.0" line34="        this.groundsInMixingContainer = 0.0" line35="        this.sodaMixInMixingContainer = 0.0" line36="        this.mixingHeaterOn = false" line37="        this.mixingCoolerOn = false //updated 18 August" line38="        this.fillingMixingContainer = false" line39="        this.mixingContainerCarbonated = false" line40="        this.completedDrink = new Cup()" line41="        this.loopCount = 0;" line42="    };" line43="" line44="" line45="    updateMachineStatus() {" line46="" line47="        this.loopCount += 1;" line48="" line49="        this.updateReservoirVolume();" line50="        this.updateMixingContainerTemperature();" line51="" line52="" line53="    };" line54="    private updateReservoirVolume() {" line55="" line56="" line57="" line58="        if (this.reservoirVolume &gt; 0 &amp;&amp; this.fillingMixingContainer) {" line59="            if (this.mixingContainerVolume &lt;= this.MIXING_CONTAINER_MAX_VOLUME)" line60="                this.reservoirVolume -= this.RESERVOIR_FLOW_RATE_PER_LOOP" line61="            this.mixingContainerVolume += this.RESERVOIR_FLOW_RATE_PER_LOOP" line62="" line63="        }" line64="" line65="    }" line66="    addGrounds() {" line67="" line68="        if (this.amountOfGroundsStored &gt; 0) {" line69="" line70="            this.amountOfGroundsStored -= this.GROUNDS_PER_SCOOP" line71="            this.groundsInMixingContainer += this.GROUNDS_PER_SCOOP" line72="" line73="        }" line74="" line75="    }" line76="    addSodaMix() {" line77="" line78="        if (this.amountOfSodaMixStored &gt; 0) { //updated 18 August" line79="" line80="            this.amountOfSodaMixStored -= this.SODA_MIX_PER_SCOOP //updated 18 August" line81="            this.sodaMixInMixingContainer += this.SODA_MIX_PER_SCOOP //updated 18 August" line82="" line83="        }" line84="" line85="    }" line86="" line87="    carbonateMixingContainer() {" line88="" line89="        this.mixingContainerCarbonated = true" line90="" line91="    }" line92="" line93="    dispenseDrinkFromMixingContainer() {" line94="" line95="        this.completedDrink.volume = this.mixingContainerVolume" line96="        this.completedDrink.temperature = this.mixingContainerTemperature" line97="        this.completedDrink.coffeeGrounds = this.groundsInMixingContainer" line98="        this.completedDrink.sodaMix = this.sodaMixInMixingContainer" line99="        this.completedDrink.isCarbonated = this.mixingContainerCarbonated" line100="" line101="        let carbonatedString = (this.completedDrink.isCarbonated ? &quot;is &quot; : &quot;is not &quot;)" line102="        this.completedDrink.descriptionString = this.completedDrink.volume + &quot; mL in cup, &quot; + this.completedDrink.temperature + &quot; ˚C, &quot; + this.completedDrink.coffeeGrounds + &quot; grams coffee, &quot; + this.completedDrink.sodaMix + &quot; grams soda mix, &quot; + carbonatedString + &quot;carbonated&quot;" line103="" line104="        let dispensedDrink = this.completedDrink" line105="" line106="        this.mixingContainerVolume = 0" line107="        this.completedDrink = new Cup()" line108="        this.mixingContainerCarbonated = false" line109="        return dispensedDrink" line110="    }" line111="" line112="    wait(timeInMilliseconds: number) {" line113="        const TIME_SCALE_FACTOR = 5" line114="        let waitCount = 0" line115="        while (waitCount &lt; (timeInMilliseconds / TIME_SCALE_FACTOR)) {" line116="            this.updateMachineStatus()" line117="            waitCount += 1" line118="            basic.pause(1)" line119="        }" line120="" line121="" line122="    }" line123="" line124="    turnHeaterOn() {" line125="        this.mixingHeaterOn = true" line126="    }" line127="" line128="    turnHeaterOff() {" line129="        this.mixingHeaterOn = false" line130="    }" line131="" line132="    turnCoolerOn() {" line133="        this.mixingCoolerOn = true" line134="    }" line135="" line136="    turnCoolerOff() {" line137="        this.mixingCoolerOn = false" line138="    }" line139="" line140="    startFillingContainer() {" line141="        this.fillingMixingContainer = true" line142="    }" line143="" line144="    stopFillingContainer() {" line145="        this.fillingMixingContainer = false" line146="    }" line147="" line148="    getTemperature() {" line149="        return this.mixingContainerTemperature" line150="    }" line151="" line152="    getVolume() {" line153="        return this.mixingContainerVolume" line154="    }" line155="" line156="    getGrounds() {" line157="        return this.groundsInMixingContainer" line158="    }" line159="" line160="    getSodaMix() {" line161="        return this.sodaMixInMixingContainer" line162="    }" line163="" line164="    private updateMixingContainerTemperature() {" line165="        if (this.mixingHeaterOn) {" line166="            let deltaTemperature = this.HEATER_POWER / (this.mixingContainerVolume * 100)" line167="            this.mixingContainerTemperature += deltaTemperature" line168="        }" line169="        if (this.mixingCoolerOn) {" line170="            let deltaTemperature2 = this.COOLER_POWER / (this.mixingContainerVolume * 100)" line171="            this.mixingContainerTemperature += deltaTemperature2" line172="        }" line173="" line174="    }" line175="" line176="" line177="" line178="" line179="}" numlines="180"></mutation><next><block type="typescript_statement" id="dl{},GSWWub:MoWST|VC" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let myDrinkMachine = new DrinkMachine()" numlines="1" declaredvars="myDrinkMachine"></mutation><next><block type="serial_writeline" id="Dl#v247ffKIQ?9rx-YC,"><value name="text"><shadow type="text" id="uP:`0beeifsEKj!?QP]s"><field name="TEXT">Press A for a Mr. Wolf sized cup of soda and B for a Mr. Wolf sized cup of water chilled to 6 ˚C</field></shadow></value></block></next></block></next></block></next></block></statement></block><block type="device_button_event" id="Fx5somd2O]qxd1qKE%~C" x="2757" y="20"><field name="NAME">Button.A</field><statement name="HANDLER"><block type="serial_writeline" id="g9$#:4Ulx_9E-(S7rHE?"><value name="text"><shadow type="text" id="ro@rB),fIIz/3dWUY4z("><field name="TEXT">I start to make mr wolf sized water chilled to 6 degree celsius</field></shadow></value><next><block type="typescript_statement" id="B^@BydW+C2iyH_ynbtbg" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function makeWaterCup(volume: number) {" line1="        serial.writeLine(&quot;Starting to fill my container&quot;)" line2="        serial.writeLine((myDrinkMachine.getVolume().toString()))" line3="        myDrinkMachine.startFillingContainer()" line4="        while (myDrinkMachine.getVolume() &lt; volume) {" line5="            myDrinkMachine.wait(1)" line6="        }" line7="        serial.writeLine(&quot;Finished Filling the Container&quot;)" line8="        myDrinkMachine.stopFillingContainer()" line9="        serial.writeLine(&quot;Cooling the Water&quot;)" line10="        myDrinkMachine.turnCoolerOn()" line11="        while (myDrinkMachine.getTemperature() &gt; 6) {" line12="            myDrinkMachine.wait(1)" line13="" line14="        }" line15="        serial.writeLine(&quot;Finished cooling water&quot;)" line16="        myDrinkMachine.turnCoolerOff()" line17="        serial.writeLine(myDrinkMachine.getTemperature().toString())" line18="        let filledCup2 = fillCup()" line19="        serial.writeLine(filledCup2.descriptionString)" line20="    }" numlines="21"></mutation><next><block type="typescript_statement" id="J-#vj^?:X~Q[qUKv!*#;" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="makeWaterCup(500)" numlines="1"></mutation></block></next></block></next></block></statement></block><block type="device_button_event" id=";9Gnu/V:O4Esb]eyq7::" x="3646" y="20"><field name="NAME">Button.B</field><statement name="HANDLER"><block type="serial_writeline" id="_Xv3cpb6Xl!bF6H.M5ZM"><value name="text"><shadow type="text" id="19:c1x;#O1B~]]$M=f$r"><field name="TEXT">I start to make mr wolf sized soda</field></shadow></value><next><block type="typescript_statement" id="Cf|kC*W5nL^Xi`gj1J}5" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function makeSodaCup(volume: number) {" line1="        serial.writeLine(&quot;Starting to fill my container&quot;)" line2="        serial.writeLine(myDrinkMachine.getVolume().toString())" line3="        myDrinkMachine.startFillingContainer()" line4="        while (myDrinkMachine.getVolume() &lt; volume) {" line5="            myDrinkMachine.wait(1)" line6="        }" line7="        serial.writeLine(&quot;Finished Filling the Container&quot;)" line8="        myDrinkMachine.stopFillingContainer()" line9="        serial.writeLine(&quot;Adding soda to the drink&quot;)" line10="        while (myDrinkMachine.sodaMixInMixingContainer &lt; 54) {" line11="            myDrinkMachine.addSodaMix()" line12="        }" line13="        serial.writeLine(&quot;Finished adding the soda&quot;)" line14="        serial.writeLine(&quot;Turning cooler&quot;)" line15="        myDrinkMachine.turnCoolerOn()" line16="" line17="        while (myDrinkMachine.getTemperature() &gt; 9) {" line18="            myDrinkMachine.wait(1)" line19="" line20="        }" line21="        serial.writeLine(&quot;Drink Cooled&quot;)" line22="        myDrinkMachine.turnCoolerOff()" line23="        serial.writeLine(myDrinkMachine.getTemperature().toString())" line24="        serial.writeLine(&quot;Carbonated the Drink&quot;)" line25="        myDrinkMachine.carbonateMixingContainer()" line26="        let filledCup3 = fillCup()" line27="        serial.writeLine(filledCup3.descriptionString)" line28="        let concentration = filledCup3.sodaMix / filledCup3.volume" line29="        serial.writeLine(concentration.toString())" line30="    }" numlines="31"></mutation><next><block type="typescript_statement" id="9PuOA}UY!HV%TQ~WSC7u" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="makeSodaCup(500)" numlines="1"></mutation></block></next></block></next></block></statement></block><block type="function_definition" id="ouX!5SY:yIzjlh[gGYJ6" x="4376" y="20"><mutation name="fillCup" functionid="svi6wCj$;2Mx*?ZLgCU]"></mutation><field name="function_name">fillCup</field><statement name="STACK"><block type="typescript_statement" id="P-pKp|3/Y}/QehUwY_i%" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let filledCup = myDrinkMachine.dispenseDrinkFromMixingContainer()" numlines="1" declaredvars="filledCup"></mutation><next><block type="function_return" id="i`DfJ5w}o=[J.{=Z8{aF"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="/8V!^Qtl=U.o1@gmr73)"><field name="VAR" id=";v)W{UP{Vtvv[I8o0^C{">filledCup</field></block></value></block></next></block></statement></block></xml>